#Each of the following case study questions can be answered using a single SQL statement:

-- 1. What is the total amount each customer spent at the restaurant?
      SELECT
          s.customer_id,
          sum(m.price)
      FROM dannys_diner.menu m LEFT JOIN dannys_diner.sales s on m.product_id=s.product_id
      GROUP BY s.customer_id;


-- 2. How many days has each customer visited the restaurant?
      SELECT
          s.customer_id,
          count(s.order_date)
      FROM dannys_diner.sales s
      GROUP BY s.customer_id;


-- 3. What was the first item from the menu purchased by each customer?
      SELECT customer_id, product_name
      FROM (SELECT s.customer_id, s.product_id, s.order_date, m.product_name, rank() over (partition by s.customer_id order by s.order_date) as rn
            FROM dannys_diner.sales s join dannys_diner.menu m on s.product_id=m.product_id) as n
      where n.rn = 1


-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?
      SELECT m.product_name, s.product_id, COUNT(s.product_id) AS total
      FROM dannys_diner.sales s JOIN dannys_diner.menu m ON s.product_id=m.product_id
      GROUP BY m.product_name, s.product_id
      order by total DESC
      LIMIT 1;


-- 5. Which item was the most popular for each customer?
      SELECT customer_id, product_name
      FROM ( 
              SELECT s.customer_id, m.product_name, COUNT(s.product_id),
              DENSE_RANK() OVER (PARTITION BY s.customer_id ORDER BY COUNT(s.customer_id) DESC) as rn
              FROM dannys_diner.menu m JOIN dannys_diner.sales s ON s.product_id = m.product_id
              GROUP BY s.customer_id, m.product_name) AS n
      WHERE n.rn =1;

-- 6. Which item was purchased first by the customer after they became a member?
      SELECT n.customer_id, m.product_name
      FROM (
            SELECT s.customer_id, s.product_id, 
            DENSE_RANK() OVER (PARTITION BY s.customer_id ORDER BY s.order_date ASC) AS rn
            FROM dannys_diner.sales s JOIN dannys_diner.members mm ON s.customer_id = mm.customer_id
            WHERE mm.join_date<=s.order_date) as n
      JOIN dannys_diner.menu m ON m.product_id = n.product_id
      WHERE n.rn=1
      ORDER BY n.customer_id ASC;

-- 7. Which item was purchased just before the customer became a member?


-- 8. What is the total items and amount spent for each member before they became a member?


-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?


-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?
